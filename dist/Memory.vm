function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 1
push static 1
push constant 0
call Memory.poke 2
pop temp 0
push constant 1
push static 1
add
push constant 14432
call Memory.poke 2
pop temp 0
push constant 0
return
function Memory.peek 0
push static 0
push argument 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push static 0
push argument 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 4
push static 1
pop local 3
push constant 1
push local 3
add
call Memory.peek 1
pop local 1
push constant 2
push argument 0
push local 1
sub
sub
pop local 2
label WHILE.Memory.alloc.1
push constant 0
push local 2
lt
not
if-goto ENDWHILE.Memory.alloc.1
push local 3
call Memory.peek 1
pop local 3
push constant 1
push local 3
add
call Memory.peek 1
pop local 1
push constant 2
push argument 0
push local 1
sub
sub
pop local 2
goto WHILE.Memory.alloc.1
label ENDWHILE.Memory.alloc.1
push constant 1
push static 1
add
push local 2
call Memory.poke 2
pop temp 0
push constant 2
push local 2
push local 3
add
add
pop local 0
push constant 1
push local 0
sub
push argument 0
call Memory.poke 2
pop temp 0
push constant 2
push local 0
sub
push constant 0
call Memory.poke 2
pop temp 0
push local 0
return
function Memory.getTail 10
push static 1
pop local 0
push static 1
call Memory.peek 1
pop local 1
label WHILE.Memory.getTail.2
push constant 0
push local 1
eq
not
not
if-goto ENDWHILE.Memory.getTail.2
push local 1
pop local 0
push local 0
call Memory.peek 1
pop local 1
goto WHILE.Memory.getTail.2
label ENDWHILE.Memory.getTail.2
push local 0
return
function Memory.deAlloc 21
call Memory.getTail 0
pop local 0
push local 0
push constant 2
push argument 0
sub
call Memory.poke 2
pop temp 0
push constant 0
return
