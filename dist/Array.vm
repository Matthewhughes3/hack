function Array.new 0
push argument 0
call Memory.alloc 1
return
function Array.length 0
push argument 0
pop pointer 0
push pointer 0
push constant 1
sub
call Memory.peek 1
return
function Array.find 4
push argument 0
pop pointer 0
push pointer 0
push constant 1
sub
call Memory.peek 1
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
push pointer 0
pop local 3
label WHILE.Array.find.2
push local 1
push local 0
lt
not
if-goto ENDWHILE.Array.find.2
pop temp 2
push local 3
push local 1
add
pop pointer 1
push that 0
pop local 2
push local 2
push argument 1
eq
not
if-goto ELSE.Array.find.2
pop temp 2
push local 1
return
goto ENDIF.Array.find.2
label ELSE.Array.find.2
label ENDIF.Array.find.2
push local 1
push constant 1
add
pop local 1
goto WHILE.Array.find.2
label ENDWHILE.Array.find.2
push constant 1
neg
return
function Array.dispose 8
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
