function Screen.init 0
push constant 32704
pop static 0
push constant 64
pop static 1
push constant 1
pop static 2
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 2
push constant 0
return
function Screen.drawPixel 3
push static 0
push argument 0
push argument 0
add
add
pop local 1
push argument 1
push constant 15
gt
not
if-goto ELSE.Screen.drawPixel.1
push local 1
push constant 1
sub
pop local 1
push argument 1
push constant 16
sub
pop argument 1
goto ENDIF.Screen.drawPixel.1
label ELSE.Screen.drawPixel.1
label ENDIF.Screen.drawPixel.1
push local 1
call Memory.peek 1
pop local 0
push argument 1
call Math.bit 1
pop local 2
push static 2
not
if-goto ELSE.Screen.drawPixel.2
push local 2
push local 0
or
pop local 2
goto ENDIF.Screen.drawPixel.2
label ELSE.Screen.drawPixel.2
push local 2
neg
push constant 1
sub
push local 0
and
pop local 2
label ENDIF.Screen.drawPixel.2
push local 1
push local 2
call Memory.poke 2
pop temp 0
push local 0
return
function Screen.drawLine 13
push argument 2
push argument 0
sub
call Math.abs 1
pop local 0
push argument 3
push argument 1
sub
call Math.abs 1
pop local 1
push constant 0
pop local 2
push constant 0
pop local 3
push argument 1
push argument 3
eq
not
if-goto ELSE.Screen.drawLine.3
label WHILE.Screen.drawLine.5
push local 2
push local 0
lt
push local 2
push local 0
eq
or
not
if-goto ENDWHILE.Screen.drawLine.5
push argument 0
push argument 2
lt
not
if-goto ELSE.Screen.drawLine.5
push argument 0
push local 2
add
push argument 1
call Screen.drawPixel 2
pop temp 0
goto ENDIF.Screen.drawLine.5
label ELSE.Screen.drawLine.5
push argument 0
push local 2
sub
push argument 1
call Screen.drawPixel 2
pop temp 0
label ENDIF.Screen.drawLine.5
push local 2
push constant 1
add
pop local 2
goto WHILE.Screen.drawLine.5
label ENDWHILE.Screen.drawLine.5
push constant 0
return
goto ENDIF.Screen.drawLine.3
label ELSE.Screen.drawLine.3
label ENDIF.Screen.drawLine.3
push argument 0
push argument 2
eq
not
if-goto ELSE.Screen.drawLine.6
label WHILE.Screen.drawLine.8
push local 3
push local 1
lt
push local 3
push local 1
eq
or
not
if-goto ENDWHILE.Screen.drawLine.8
push argument 1
push argument 3
lt
not
if-goto ELSE.Screen.drawLine.8
push argument 0
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
goto ENDIF.Screen.drawLine.8
label ELSE.Screen.drawLine.8
push argument 0
push argument 1
push local 3
sub
call Screen.drawPixel 2
pop temp 0
label ENDIF.Screen.drawLine.8
push local 3
push constant 1
add
pop local 3
goto WHILE.Screen.drawLine.8
label ENDWHILE.Screen.drawLine.8
push constant 0
return
goto ENDIF.Screen.drawLine.6
label ELSE.Screen.drawLine.6
label ENDIF.Screen.drawLine.6
push constant 0
pop local 4
label WHILE.Screen.drawLine.14
push local 2
push local 0
lt
push local 2
push local 0
eq
or
push local 3
push local 1
lt
push local 3
push local 1
eq
or
and
not
if-goto ENDWHILE.Screen.drawLine.14
push argument 1
push argument 3
lt
push argument 0
push argument 2
lt
and
not
if-goto ELSE.Screen.drawLine.10
push argument 0
push local 2
add
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
goto ENDIF.Screen.drawLine.10
label ELSE.Screen.drawLine.10
label ENDIF.Screen.drawLine.10
push argument 1
push argument 3
lt
push argument 0
push argument 2
gt
and
not
if-goto ELSE.Screen.drawLine.11
push argument 0
push local 2
sub
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
goto ENDIF.Screen.drawLine.11
label ELSE.Screen.drawLine.11
label ENDIF.Screen.drawLine.11
push argument 1
push argument 3
gt
push argument 0
push argument 2
lt
and
not
if-goto ELSE.Screen.drawLine.12
push argument 0
push local 2
add
push argument 1
push local 3
sub
call Screen.drawPixel 2
pop temp 0
goto ENDIF.Screen.drawLine.12
label ELSE.Screen.drawLine.12
label ENDIF.Screen.drawLine.12
push argument 1
push argument 3
gt
push argument 0
push argument 2
gt
and
not
if-goto ELSE.Screen.drawLine.13
push argument 0
push local 2
sub
push argument 1
push local 3
sub
call Screen.drawPixel 2
pop temp 0
goto ENDIF.Screen.drawLine.13
label ELSE.Screen.drawLine.13
label ENDIF.Screen.drawLine.13
push local 4
push constant 0
lt
not
if-goto ELSE.Screen.drawLine.14
push local 2
push constant 1
add
pop local 2
push local 4
push local 1
add
pop local 4
goto ENDIF.Screen.drawLine.14
label ELSE.Screen.drawLine.14
push local 3
push constant 1
add
pop local 3
push local 4
push local 0
sub
pop local 4
label ENDIF.Screen.drawLine.14
goto WHILE.Screen.drawLine.14
label ENDWHILE.Screen.drawLine.14
push argument 1
push argument 3
lt
push argument 0
push argument 2
lt
and
return
function Screen.drawCircle 33
push argument 2
neg
pop local 0
push argument 2
push argument 2
call Math.multiply 2
pop local 2
label WHILE.Screen.drawCircle.16
push local 0
push argument 2
lt
push local 0
push argument 2
eq
or
not
if-goto ENDWHILE.Screen.drawCircle.16
push local 0
push local 0
call Math.multiply 2
pop local 1
push local 2
push local 1
sub
call Math.sqrt 1
pop local 3
push argument 0
push local 3
sub
pop local 5
push argument 0
push local 3
add
pop local 6
push argument 1
push local 0
add
pop local 4
push argument 3
not
if-goto ELSE.Screen.drawCircle.16
push local 5
push local 4
push local 6
push local 4
call Screen.drawLine 4
pop temp 0
goto ENDIF.Screen.drawCircle.16
label ELSE.Screen.drawCircle.16
push local 5
push local 4
call Screen.drawPixel 2
pop temp 0
push local 6
push local 4
call Screen.drawPixel 2
pop temp 0
label ENDIF.Screen.drawCircle.16
push local 0
push constant 1
add
pop local 0
goto WHILE.Screen.drawCircle.16
label ENDWHILE.Screen.drawCircle.16
push constant 0
return
function Screen.drawRectangle 69
push argument 1
push argument 3
sub
call Math.abs 1
pop local 0
push constant 0
pop local 1
label WHILE.Screen.drawRectangle.18
push local 1
push local 0
lt
push local 1
push local 0
eq
or
not
if-goto ENDWHILE.Screen.drawRectangle.18
push argument 1
push argument 3
lt
not
if-goto ELSE.Screen.drawRectangle.18
push argument 1
push local 1
add
pop local 2
goto ENDIF.Screen.drawRectangle.18
label ELSE.Screen.drawRectangle.18
push argument 1
push local 1
sub
pop local 2
label ENDIF.Screen.drawRectangle.18
push argument 0
push local 2
push argument 2
push local 2
call Screen.drawLine 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE.Screen.drawRectangle.18
label ENDWHILE.Screen.drawRectangle.18
push constant 0
return
function Screen.clearScreen 139
push constant 0
pop local 0
label WHILE.Screen.clearScreen.19
push local 0
push static 1
lt
not
if-goto ENDWHILE.Screen.clearScreen.19
push static 0
push local 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE.Screen.clearScreen.19
label ENDWHILE.Screen.clearScreen.19
push constant 0
return
